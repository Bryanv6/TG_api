{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/test.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,8BAA8B,uBAAuB,6BAA6B,KAAK,0BAA0B,kCAAkC,KAAK,C;;;;;;;ACAxJ,mJAAmJ,SAAS,gDAAgD,WAAW,qOAAqO,YAAY,S;;;;;;;;;;;;;;;;;;;;ACA9Z;AACG;AAO7C;IAIE,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAH5C,UAAK,GAAG,iBAAiB,CAAC;QAC1B,cAAS,GAAE,+CAA+C,CAAC;QAC3D,eAAU,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IACM,CAAC;IAC/C,mCAAY,GAAZ,UAAa,QAAgB;QAE3B,6BAA6B;QAC7B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC;IAED,gCAAS,GAAT;QAEE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;IACpC,CAAC;IAdU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKiC,kEAAW;OAJjC,YAAY,CAgBxB;IAAD,mBAAC;CAAA;AAhBwB;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACE;AACE;AACE;AAc/C;IAAA;IAGA,CAAC;IAHY,SAAS;QAXrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,iEAAU;aACX;YACD,SAAS,EAAE,CAAC,kEAAW,CAAC;YACxB,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAGrB;IAAD,gBAAC;CAAA;AAHqB;;;;;;;;;;;;;;;;;;;;;;AClBqB;AACM;AAClB;AAG/B;IAEI,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QACtB,WAAM,GAAC,aAAa,CAAC;QACrB,aAAQ,GAAC,+CAA+C,CAAC;IAFjC,CAAC;IAInC;wEACoE;IAClE,oCAAc,GAAd;QAEE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;YACtC,GAAG,CACD,UAAC,QAAQ,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAC9B,CAAC;IACJ,CAAC;IAED,gCAAgC;IAChC,iCAAW,GAAX,UAAY,SAAiB;QAE3B,IAAI,CAAC,QAAQ,GAAC,SAAS,CAAC;IAC1B,CAAC;IAED,6BAAO,GAAP;QAEE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAzBQ,WAAW;QADvB,yEAAU,EAAE;yCAGiB,2DAAI;OAFrB,WAAW,CA2BvB;IAAD,kBAAC;CAAA;AA3BuB;;;;;;;;;ACLxB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \".button\\r\\n{\\r\\n   font-size: 24px;\\r\\n   background-color: red;\\r\\n}\\r\\n\\r\\n.button:hover\\r\\n{\\r\\n    background-color: #4CAF50;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n  <input type=\\\"url\\\" placeholder={{webAppURL}}>\\n  <button type=\\\"button\\\" (click)=\\\"getResult()\\\">Test</button>\\n\\n<div>\\n  <!-- iterate through json object -->\\n<!-- <li *ngFor=\\\"let t of json\\\">\\n <span> <b>t.name</b> </span>\\n  <span><b>t.result</b></span>\\n</li> -->\\n{{testResult}}\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { TestService } from './test.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Test Automation';\n  webAppURL ='https://dev.assignforce.revaturelabs.com/home';\n  testResult = this.testService.getData();\n  constructor(private testService: TestService){}\n  setWebAppURL(paramURL: string)\n  {\n    //hardcoded webAppURL for now\n    this.testService.setParamURL(this.webAppURL);\n  }\n\n  getResult()\n  {\n    this.testService.getTestResults();\n  }\n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { TestService } from './test.service';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule\n  ],\n  providers: [TestService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule \n{ \n \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Http, HttpModule } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class TestService\n{\n    constructor(private http: Http){}\n    private apiURL=\"/TG_Servlet\";\n    private paramURL=\"https://dev.assignforce.revaturelabs.com/home\";\n    data: any;\n  /*getTestResults method takes url as param, \n  passes it to $http.getmethod and maps response back as json object*/\n    getTestResults()\n    {\n      this.data = this.http.get(this.apiURL).\n      map(\n        (response) => response.json()\n      );\n    }\n\n    //set webappURL param if desired\n    setParamURL(webAppURL: string)\n    {\n      this.paramURL=webAppURL;\n    }\n\n    getData()\n    {\n      return this.data;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/test.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}