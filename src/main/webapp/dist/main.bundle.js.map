{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/test.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,8BAA8B,uBAAuB,6BAA6B,KAAK,0BAA0B,kCAAkC,KAAK,C;;;;;;;ACAxJ,yJAAyJ,SAAS,oDAAoD,WAAW,mLAAmL,mBAAmB,6BAA6B,YAAY,4BAA4B,cAAc,kCAAkC,YAAY,iB;;;;;;;;;;;;;;;;;;;;ACA9f;AACG;AAQ7C;IAIE,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAH5C,UAAK,GAAG,iBAAiB,CAAC;QAC1B,cAAS,GAAE,+CAA+C,CAAC;IAEb,CAAC;IAE/C,mCAAY,GAAZ,UAAa,QAAgB;QAE3B,+BAA+B;QAChC,gDAAgD;IACjD,CAAC;IAED,gCAAS,GAAT;QAEG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QACnC,uBAAuB;QACvB,+BAA+B;IACjC,CAAC;IAjBU,YAAY;QANxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;YAGpB,SAAS,EAAE,CAAC,kEAAW,CAAC;SACzB,CAAC;yCAKiC,kEAAW;OAJjC,YAAY,CA2BxB;IAAD,mBAAC;CAAA;AA3BwB;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACE;AACE;AACE;AAc/C;IAAA;IAGA,CAAC;IAHY,SAAS;QAXrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,iEAAU;aACX;YACD,SAAS,EAAE,CAAC,kEAAW,CAAC;YACxB,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAGrB;IAAD,gBAAC;CAAA;AAHqB;;;;;;;;;;;;;;;;;;;;;;AClBqB;AACN;AACN;AAI/B;IAEI,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QACtB,WAAM,GAAC,oCAAoC,CAAC;QACrD,+FAA+F;QACtF,aAAQ,GAAC,+CAA+C,CAAC;IAHjC,CAAC;IAMpC,oCAAc,GAAd;QAAA,iBASE;QAPE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;aAC1B,GAAG,CAAC,UAAC,QAAQ,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,sBAAqB;YACxC,wEAAwE;YACvE,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAC,2CAA2C,CAAC;QACnE,CAAC,CAAC,CAAC;IAEL,CAAC;IAEC,6BAAO,GAAP,UAAQ,IAAI;QAEZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACnB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAvBQ,WAAW;QADvB,yEAAU,EAAE;yCAGiB,2DAAI;OAFrB,WAAW,CA0BvB;IAAD,kBAAC;CAAA;AA1BuB;;;;;;;;;ACNxB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \".button\\r\\n{\\r\\n   font-size: 24px;\\r\\n   background-color: red;\\r\\n}\\r\\n\\r\\n.button:hover\\r\\n{\\r\\n    background-color: #4CAF50;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    Welcome to {{ title }}!\\r\\n  </h1>\\r\\n  <input type=\\\"url\\\" placeholder={{webAppURL}}>\\r\\n  <button type=\\\"button\\\" (click)= \\\"getResult()\\\" >Test</button>\\r\\n\\r\\n <div>\\r\\n<!--iterate through json object-->\\r\\n <li *ngFor=\\\"let t of testResult\\\">\\r\\n <span> <b>{{t.TestDescription}}</b> </span>\\r\\n  <span><b>{{t.Testname}}</b></span>\\r\\n  <span><b>{{t.TestResult}}</b></span>\\r\\n</li>   \\r\\n<!-- {{testResult}} --> \\r\\n</div> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { TestService } from './test.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [TestService]\r\n})\r\nexport class AppComponent {\r\n  title = 'Test Automation';\r\n  webAppURL ='https://dev.assignforce.revaturelabs.com/home';\r\n  testResult:any;\r\n  constructor(private testService: TestService){}\r\n\r\n  setWebAppURL(paramURL: string)\r\n  {\r\n    //hardcoded webAppURL for now`1\r\n   // this.testService.setParamURL(this.webAppURL);\r\n  }\r\n\r\n  getResult()\r\n  {\r\n     this.testService.getTestResults();\r\n    //this.gettestresult();\r\n    //console.log(this.testResult);\r\n  }\r\n\r\n  \r\n  /*\r\n  gettestresult()\r\n  {\r\n    this.testResult = this.testService.httpdata;\r\n    console.log(this.testResult);\r\n}*/\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { TestService } from './test.service';\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule\r\n  ],\r\n  providers: [TestService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule \r\n{ \r\n \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n@Injectable()\r\nexport class TestService\r\n{\r\n    constructor(private http: Http){}\r\n    private apiURL=\"http://localhost:8080/TG_pro/ty.do\";\r\n   // private apiURL = \"http://ec2-18-188-2-93.us-east-2.compute.amazonaws.com:8090/TG_pro/ty.do\";\r\n    private paramURL=\"https://dev.assignforce.revaturelabs.com/home\";\r\n    httpdata: any;\r\n\r\n getTestResults()\r\n  {\r\n     this.http.get(this.apiURL)\r\n    .map((response) => response.json()).subscribe(data => {\r\n     this.getData(data);// console.log(data);\r\n     // window.location.replace(\"/TG_pro/test-output/emailable-report.html\");\r\n      window.location.href='/TG_pro/test-output/emailable-report.html';\r\n    });\r\n\r\n  }\r\n\r\n    getData(data)\r\n    {\r\n    this.httpdata = data;\r\n      return this.httpdata;\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/test.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}